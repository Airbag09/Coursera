chooseCRANmirror()
utils:::menuInstallPkgs()
q()
library(lavaan)
library(lavaan)
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
setwd("C:\Users\Daniel Ringbeck\Documents\Rscipts")
library(lavaan)
setwd("C:\\Users\Daniel Ringbeck\\Documents\\Rscipts")
library(lavaan)
rownames(S)=c("x1","x2","x3","x4")
S=matrix(
c(1,.595,.589,.742,
.595,1,.817,.658,
.589,.817,1,.721,
.742,.658,.721,1),
4,4,byrow=TRUE)
colnames(S)=c("x1","x2","x3","x4")
rownames(S)=c("x1","x2","x3","x4")
S
#LAVAAN MODEL SYNTAX
one_factor=
'factor=~x1+x2+x3+x4
factor~~1*factor'
#ESTIMATING THE ONE-FACTOR MODEL
output_one_factor=lavaan(model=one_factor,sample.cov=S,auto.var=TRUE,
estimator="ML",sample.nobs=155,sample.cov.rescale=FALSE)
#SUMMARY OF RESULTS
summary(output_one_factor)
fitMeasures(output_one_factor)
S_CFA=matrix(
c(1.000, 0.326, 0.449, 0.342, 0.309, 0.317,
0.326, 1.000, 0.417, 0.228, 0.159, 0.195,
0.449, 0.417, 1.000, 0.328, 0.287, 0.347,
0.342, 0.228, 0.328, 1.000, 0.719, 0.714,
0.309, 0.159, 0.287, 0.719, 1.000, 0.685,
0.317, 0.195, 0.347, 0.714, 0.685, 1.000),6,6,byrow=TRUE)
colnames(S_CFA)=c("x1","x2","x3","x4","x5","x6")
rownames(S_CFA)=c("x1","x2","x3","x4","x5","x6")
S_CFA
CFA_factor=
'factor1=~x1+x2+x3
factor1~~1*factor1
factor2=~x4+x5+x6
factor2~~1*factor2
factor1~~factor2'
output_CFA_factor=lavaan(model=CFA_factor,sample.cov=S_CFA,auto.var=TRUE,
estimator="ML",sample.nobs=141,sample.cov.rescale=FALSE)
summary(output_CFA_factor)
fitMeasures(output_CFA_factor)
#COVARIANCE MATRIX FOR SEM MODEL (SESSION 6)
S_SEM=matrix(
c(1,.531,.051,
.531,1,.664,
.051,.664,1),
3,3,byrow=TRUE)
colnames(S_SEM)=c("Z","X","Y")
rownames(S_SEM)=c("Z","X","Y")
#LAVAAN MODEL SYNTAX
SEM=
'Y~X
X~Z
X~~Y'
#ESTIMATING THE SEM MODEL
output_SEM=lavaan(model=SEM,sample.cov=S_SEM,auto.var=TRUE,
estimator="ML",sample.nobs=200,sample.cov.rescale=FALSE)
#SUMMARY OF RESULTS
summary(output_SEM)
fitMeasures(output_SEM)
##############
###IV MODEL###
##############
#COVARIANCE MATRIX FOR IV MODEL (EXERCISE SESSION 6)
S_IV=matrix(
c(1,.049,.480,.059,
.049,1,.519,.099,
.480,.519,1,.664,
.059,.099,.664,1),
4,4,byrow=TRUE)
colnames(S_IV)=c("Z1","Z2","X","Y")
rownames(S_IV)=c("Z1","Z2","X","Y")
IV_Z1=
'Z1~X
X~Y
X~~Y'
output_IV_Z1=lavaan(model=IV_Z1,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z1)
fitMeasures(output_IV_Z1)
IV_Z1=
'Z1~X
X~Y
X~~Y
Z1~~0*Y'
output_IV_Z1=lavaan(model=IV_Z1,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z1)
fitMeasures(output_IV_Z1)
IV_Z2=
'Z2~X
X~Y
X~~Y
Z2~~Y'
output_IV_Z2=lavaan(model=IV_Z2,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z2)
fitMeasures(output_IV_Z2)
IV_Z1=
'Z1~X
X~Y
X~~Y
Z1~~Y'
output_IV_Z1=lavaan(model=IV_Z1,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z1)
fitMeasures(output_IV_Z1)
IV_Z1=
'Z1~X
X~Y
Z1~Y
X~~Y
Z1~~Y'
output_IV_Z1=lavaan(model=IV_Z1,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z1)
IV_Z1=
'Y~X
X~Z1
Y~~X'
output_IV_Z1=lavaan(model=IV_Z1,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z1)
fitMeasures(output_IV_Z1)
IV_Z2=
'Y~X
X~Z2
Y~~X'
output_IV_Z2=lavaan(model=IV_Z2,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z2)
fitMeasures(output_IV_Z2)
IV_Z1Z2=
'Y~X
X~Z1
X~Z2
Y~~X'
output_IV_Z1Z2=lavaan(model=IV_Z1Z2,sample.cov=S_IV,auto.var=TRUE,
estimator="ML",sample.nobs=1000,sample.cov.rescale=FALSE)
summary(output_IV_Z1Z2)
fitMeasures(output_IV_Z1Z2)
q()
install.packages("swirl")
> library("swirl")
> swirl()
> swirl()
swirl()
library("swirl")
library(swirl)
swirl()
install.packages("KernSmooth")
12
5+7
x<-5+7
library(KernSmooth)
pwd
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,55,z)
c(z,555,z)
z*2+100
my_sqrt <- (z-1)^0.5
my_sqrt<-sqrt(z-1)
my_sqrt
mdiv<-z/my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
setwd(C:/Users/Daniel Ringbeck/Documents/Coursera/github)
setwd(C:\Users\Daniel Ringbeck\Documents\Coursera\github)
getwd
getwd()
setwd(C:/Users/Daniel Ringbeck/Documents/Coursera/github)
setwd(C:\Users\Daniel Ringbeck\Documents\Coursera\github)
setwd("C:/Users/Daniel Ringbeck/Documents/Coursera/github")
getwd()
install.packages ("devtools")
find.package("devtools")
library(devtools)
find.rtools
find_rtool()
install.packages("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
